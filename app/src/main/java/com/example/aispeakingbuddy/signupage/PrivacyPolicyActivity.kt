package com.example.aispeakingbuddy.signupage

import android.os.Bundle
import android.webkit.WebView
import android.webkit.WebViewClient
import androidx.appcompat.app.AppCompatActivity
import androidx.databinding.DataBindingUtil
import com.example.aispeakingbuddy.R
import com.example.aispeakingbuddy.databinding.ActivityPrivacyPolicyBinding

class PrivacyPolicyActivity : AppCompatActivity() {

    private lateinit var binding: ActivityPrivacyPolicyBinding

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        binding = DataBindingUtil.setContentView(this, R.layout.activity_privacy_policy)

        setupUI()
        setupClickListeners()
        loadPrivacyPolicy()
    }

    private fun setupUI() {
        window.statusBarColor = getColor(R.color.primary_color)

        // Setup WebView
        binding.webView.settings.apply {
            javaScriptEnabled = true
            domStorageEnabled = true
            loadWithOverviewMode = true
            useWideViewPort = true
            builtInZoomControls = false
            displayZoomControls = false
        }

        binding.webView.webViewClient = object : WebViewClient() {
            override fun onPageStarted(view: WebView?, url: String?, favicon: android.graphics.Bitmap?) {
                binding.progressBar.visibility = android.view.View.VISIBLE
            }

            override fun onPageFinished(view: WebView?, url: String?) {
                binding.progressBar.visibility = android.view.View.GONE
            }
        }
    }

    private fun setupClickListeners() {
        binding.btnBack.setOnClickListener {
            onBackPressed()
        }

        binding.btnAccept.setOnClickListener {
            // Mark as accepted and return
            setResult(RESULT_OK)
            finish()
        }
    }

    private fun loadPrivacyPolicy() {
        // You can load from URL or local HTML
        val privacyPolicyHtml = createPrivacyPolicyHtml()
        binding.webView.loadDataWithBaseURL(null, privacyPolicyHtml, "text/html", "UTF-8", null)
    }

    private fun createPrivacyPolicyHtml(): String {
        return """
            <!DOCTYPE html>
            <html>
            <head>
                <meta charset="UTF-8">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <title>Privacy Policy</title>
                <style>
                    body {
                        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                        line-height: 1.6;
                        margin: 0;
                        padding: 20px;
                        color: #333;
                        background-color: #f8f9fa;
                    }
                    .container {
                        max-width: 800px;
                        margin: 0 auto;
                        background: white;
                        padding: 30px;
                        border-radius: 12px;
                        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
                    }
                    h1 {
                        color: #667eea;
                        border-bottom: 3px solid #667eea;
                        padding-bottom: 10px;
                    }
                    h2 {
                        color: #764ba2;
                        margin-top: 30px;
                    }
                    .highlight {
                        background: linear-gradient(135deg, #667eea, #764ba2);
                        color: white;
                        padding: 15px;
                        border-radius: 8px;
                        margin: 20px 0;
                    }
                    .update-date {
                        background: #e8f4f8;
                        padding: 10px;
                        border-radius: 6px;
                        font-size: 14px;
                        color: #666;
                    }
                </style>
            </head>
            <body>
                <div class="container">
                    <h1>üîí Ch√≠nh S√°ch B·∫£o M·∫≠t</h1>
                    
                    <div class="update-date">
                        <strong>C·∫≠p nh·∫≠t l·∫ßn cu·ªëi:</strong> ${getCurrentDate()}
                    </div>
                    
                    <div class="highlight">
                        <h3>ü§ñ AI Speaking Buddy cam k·∫øt b·∫£o v·ªá quy·ªÅn ri√™ng t∆∞ c·ªßa b·∫°n</h3>
                        <p>Ch√∫ng t√¥i thu th·∫≠p v√† s·ª≠ d·ª•ng th√¥ng tin c·ªßa b·∫°n m·ªôt c√°ch minh b·∫°ch, an to√†n v√† c√≥ tr√°ch nhi·ªám.</p>
                    </div>

                    <h2>1. üìä Th√¥ng Tin Ch√∫ng T√¥i Thu Th·∫≠p</h2>
                    <ul>
                        <li><strong>Th√¥ng tin c√° nh√¢n:</strong> T√™n, email, ·∫£nh ƒë·∫°i di·ªán</li>
                        <li><strong>D·ªØ li·ªáu h·ªçc t·∫≠p:</strong> Ti·∫øn ƒë·ªô h·ªçc, ƒëi·ªÉm s·ªë, th·ªùi gian h·ªçc</li>
                        <li><strong>D·ªØ li·ªáu gi·ªçng n√≥i:</strong> Ghi √¢m ƒë·ªÉ c·∫£i thi·ªán ph√°t √¢m (ch·ªâ khi b·∫°n ƒë·ªìng √Ω)</li>
                        <li><strong>Th√¥ng tin thi·∫øt b·ªã:</strong> Lo·∫°i thi·∫øt b·ªã, h·ªá ƒëi·ªÅu h√†nh, IP address</li>
                    </ul>

                    <h2>2. üéØ M·ª•c ƒê√≠ch S·ª≠ D·ª•ng</h2>
                    <ul>
                        <li>Cung c·∫•p d·ªãch v·ª• h·ªçc ti·∫øng Anh c√° nh√¢n h√≥a</li>
                        <li>Theo d√µi v√† c·∫£i thi·ªán ti·∫øn ƒë·ªô h·ªçc t·∫≠p c·ªßa b·∫°n</li>
                        <li>G·ª≠i th√¥ng b√°o v√† c·∫≠p nh·∫≠t v·ªÅ kh√≥a h·ªçc</li>
                        <li>C·∫£i thi·ªán ch·∫•t l∆∞·ª£ng ·ª©ng d·ª•ng v√† d·ªãch v·ª•</li>
                        <li>H·ªó tr·ª£ kh√°ch h√†ng v√† x·ª≠ l√Ω khi·∫øu n·∫°i</li>
                    </ul>

                    <h2>3. üîê B·∫£o M·∫≠t Th√¥ng Tin</h2>
                    <ul>
                        <li>M√£ h√≥a d·ªØ li·ªáu b·∫±ng SSL/TLS</li>
                        <li>L∆∞u tr·ªØ tr√™n m√°y ch·ªß an to√†n v·ªõi nhi·ªÅu l·ªõp b·∫£o v·ªá</li>
                        <li>Ch·ªâ nh√¢n vi√™n ƒë∆∞·ª£c ·ªßy quy·ªÅn m·ªõi c√≥ th·ªÉ truy c·∫≠p</li>
                        <li>Sao l∆∞u d·ªØ li·ªáu th∆∞·ªùng xuy√™n</li>
                        <li>Tu√¢n th·ªß c√°c ti√™u chu·∫©n b·∫£o m·∫≠t qu·ªëc t·∫ø</li>
                    </ul>

                    <h2>4. ü§ù Chia S·∫ª Th√¥ng Tin</h2>
                    <p><strong>Ch√∫ng t√¥i KH√îNG b√°n th√¥ng tin c√° nh√¢n c·ªßa b·∫°n.</strong></p>
                    <p>Th√¥ng tin c√≥ th·ªÉ ƒë∆∞·ª£c chia s·∫ª trong c√°c tr∆∞·ªùng h·ª£p sau:</p>
                    <ul>
                        <li>V·ªõi s·ª± ƒë·ªìng √Ω r√µ r√†ng c·ªßa b·∫°n</li>
                        <li>V·ªõi c√°c ƒë·ªëi t√°c c√¥ng ngh·ªá ƒë·ªÉ cung c·∫•p d·ªãch v·ª• (OpenAI, Google Speech API)</li>
                        <li>Khi ph√°p lu·∫≠t y√™u c·∫ßu</li>
                        <li>ƒê·ªÉ b·∫£o v·ªá quy·ªÅn l·ª£i h·ª£p ph√°p c·ªßa ch√∫ng t√¥i</li>
                    </ul>

                    <h2>5. üç™ Cookies v√† C√¥ng Ngh·ªá Theo D√µi</h2>
                    <ul>
                        <li>S·ª≠ d·ª•ng cookies ƒë·ªÉ ghi nh·ªõ ƒëƒÉng nh·∫≠p v√† t√πy ch·ªçn</li>
                        <li>Thu th·∫≠p d·ªØ li·ªáu ph√¢n t√≠ch ƒë·ªÉ c·∫£i thi·ªán ·ª©ng d·ª•ng</li>
                        <li>B·∫°n c√≥ th·ªÉ t·∫Øt cookies trong c√†i ƒë·∫∑t tr√¨nh duy·ªát</li>
                        <li>M·ªôt s·ªë t√≠nh nƒÉng c√≥ th·ªÉ b·ªã h·∫°n ch·∫ø khi t·∫Øt cookies</li>
                    </ul>

                    <h2>6. üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Quy·ªÅn Ri√™ng T∆∞ Tr·∫ª Em</h2>
                    <p>Ch√∫ng t√¥i kh√¥ng c·ªë √Ω thu th·∫≠p th√¥ng tin t·ª´ tr·∫ª em d∆∞·ªõi 13 tu·ªïi. N·∫øu ph√°t hi·ªán, ch√∫ng t√¥i s·∫Ω x√≥a ngay l·∫≠p t·ª©c.</p>

                    <h2>7. üåç Chuy·ªÉn Giao D·ªØ Li·ªáu Qu·ªëc T·∫ø</h2>
                    <p>D·ªØ li·ªáu c·ªßa b·∫°n c√≥ th·ªÉ ƒë∆∞·ª£c x·ª≠ l√Ω ·ªü c√°c qu·ªëc gia kh√°c. Ch√∫ng t√¥i ƒë·∫£m b·∫£o m·ª©c ƒë·ªô b·∫£o v·ªá t∆∞∆°ng ƒë∆∞∆°ng.</p>

                    <h2>8. ‚è∞ L∆∞u Tr·ªØ D·ªØ Li·ªáu</h2>
                    <ul>
                        <li>D·ªØ li·ªáu t√†i kho·∫£n: Cho ƒë·∫øn khi b·∫°n y√™u c·∫ßu x√≥a</li>
                        <li>D·ªØ li·ªáu h·ªçc t·∫≠p: 5 nƒÉm sau l·∫ßn s·ª≠ d·ª•ng cu·ªëi</li>
                        <li>D·ªØ li·ªáu gi·ªçng n√≥i: 1 nƒÉm (c√≥ th·ªÉ x√≥a s·ªõm h∆°n theo y√™u c·∫ßu)</li>
                    </ul>

                    <h2>9. üéõÔ∏è Quy·ªÅn C·ªßa B·∫°n</h2>
                    <ul>
                        <li><strong>Truy c·∫≠p:</strong> Xem th√¥ng tin ch√∫ng t√¥i c√≥ v·ªÅ b·∫°n</li>
                        <li><strong>S·ª≠a ƒë·ªïi:</strong> C·∫≠p nh·∫≠t th√¥ng tin kh√¥ng ch√≠nh x√°c</li>
                        <li><strong>X√≥a:</strong> Y√™u c·∫ßu x√≥a d·ªØ li·ªáu c√° nh√¢n</li>
                        <li><strong>Di chuy·ªÉn:</strong> Xu·∫•t d·ªØ li·ªáu sang ƒë·ªãnh d·∫°ng kh√°c</li>
                        <li><strong>T·ª´ ch·ªëi:</strong> Kh√¥ng ƒë·ªìng √Ω x·ª≠ l√Ω d·ªØ li·ªáu</li>
                    </ul>

                    <h2>10. üìû Li√™n H·ªá</h2>
                    <p>N·∫øu c√≥ th·∫Øc m·∫Øc v·ªÅ ch√≠nh s√°ch n√†y:</p>
                    <ul>
                        <li><strong>Email:</strong> privacy@aispeakingbuddy.com</li>
                        <li><strong>ƒêi·ªán tho·∫°i:</strong> 1900-xxx-xxx</li>
                        <li><strong>ƒê·ªãa ch·ªâ:</strong> H√† N·ªôi, Vi·ªát Nam</li>
                    </ul>

                    <div class="highlight">
                        <h3>üîÑ C·∫≠p Nh·∫≠t Ch√≠nh S√°ch</h3>
                        <p>Ch√∫ng t√¥i c√≥ th·ªÉ c·∫≠p nh·∫≠t ch√≠nh s√°ch n√†y. C√°c thay ƒë·ªïi quan tr·ªçng s·∫Ω ƒë∆∞·ª£c th√¥ng b√°o qua email ho·∫∑c th√¥ng b√°o trong ·ª©ng d·ª•ng.</p>
                    </div>
                </div>
            </body>
            </html>
        """.trimIndent()
    }

    private fun getCurrentDate(): String {
        val sdf = java.text.SimpleDateFormat("dd/MM/yyyy", java.util.Locale.getDefault())
        return sdf.format(java.util.Date())
    }

    override fun onBackPressed() {
        if (binding.webView.canGoBack()) {
            binding.webView.goBack()
        } else {
            super.onBackPressed()
            overridePendingTransition(android.R.anim.slide_in_left, android.R.anim.slide_out_right)
        }
    }
}